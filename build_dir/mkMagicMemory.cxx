/*
 * Generated by Bluespec Compiler, version 2016.07.beta1 (build 34806, 2016-07-05)
 * 
 * On Tue Oct 30 18:02:05 UTC 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkMagicMemory.h"
#include "imported_BDPI_functions.h"


/* String declarations */
static std::string const __str_literal_2("Data failed to load!", 20u);
static std::string const __str_literal_3("Memory Dump Complete!", 21u);
static std::string const __str_literal_1("mem.vmh", 7u);


/* Constructor */
MOD_mkMagicMemory::MOD_mkMagicMemory(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_dumpState(simHdl, "dumpState", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_mem(simHdl, "mem", this, __str_literal_1, 14u, 34u, 0u, 16383u, (tUInt8)0u),
    INST_mem_counter(simHdl, "mem_counter", this, 14u, 0u, (tUInt8)0u),
    INST_mem_state(simHdl, "mem_state", this, 3u, (tUInt8)2u, (tUInt8)0u),
    INST_sizeCounter(simHdl, "sizeCounter", this, 14u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  symbol_count = 8u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkMagicMemory::init_symbols_0()
{
  init_symbol(&symbols[0u], "dumpState", SYM_MODULE, &INST_dumpState);
  init_symbol(&symbols[1u], "mem", SYM_MODULE, &INST_mem);
  init_symbol(&symbols[2u], "mem_counter", SYM_MODULE, &INST_mem_counter);
  init_symbol(&symbols[3u], "mem_state", SYM_MODULE, &INST_mem_state);
  init_symbol(&symbols[4u], "mem_state__h348", SYM_DEF, &DEF_mem_state__h348, 3u);
  init_symbol(&symbols[5u], "RL_dumpData", SYM_RULE);
  init_symbol(&symbols[6u], "RL_findMemSize", SYM_RULE);
  init_symbol(&symbols[7u], "sizeCounter", SYM_MODULE, &INST_sizeCounter);
}


/* Rule actions */

void MOD_mkMagicMemory::RL_findMemSize()
{
  tUInt32 DEF_x__h455;
  tUInt8 DEF_NOT_mem_sub_sizeCounter_BITS_4_TO_0_EQ_28___d7;
  tUInt8 DEF_mem_sub_sizeCounter_BITS_4_TO_0_EQ_28___d6;
  DEF_x__h483 = INST_sizeCounter.METH_read();
  DEF_mem_sub_sizeCounter_BITS_4_TO_0_EQ_28___d6 = ((tUInt8)((tUInt8)31u & INST_mem.METH_sub(DEF_x__h483))) == (tUInt8)28u;
  DEF_NOT_mem_sub_sizeCounter_BITS_4_TO_0_EQ_28___d7 = !DEF_mem_sub_sizeCounter_BITS_4_TO_0_EQ_28___d6;
  DEF_x__h455 = 16383u & (DEF_x__h483 + 1u);
  if (DEF_mem_sub_sizeCounter_BITS_4_TO_0_EQ_28___d6)
    INST_mem_state.METH_write((tUInt8)1u);
  if (DEF_NOT_mem_sub_sizeCounter_BITS_4_TO_0_EQ_28___d7)
    INST_sizeCounter.METH_write(DEF_x__h455);
}

void MOD_mkMagicMemory::RL_dumpData()
{
  tUInt32 DEF_x__h769;
  tUInt8 DEF_NOT_fileAppend_C_mem_sub_mem_counter_0_1_BITS__ETC___d20;
  tUInt8 DEF_mem_counter_0_EQ_sizeCounter___d21;
  tUInt32 DEF_x__h773;
  tUInt64 DEF_mem_sub_mem_counter_0___d11;
  tUInt8 DEF_fileAppend_C_mem_sub_mem_counter_0_1_BITS_33_T_ETC___d19;
  DEF_x__h773 = INST_mem_counter.METH_read();
  DEF_mem_sub_mem_counter_0___d11 = INST_mem.METH_sub(DEF_x__h773);
  DEF_fileAppend_C_mem_sub_mem_counter_0_1_BITS_33_T_ETC___d19 = fileAppend_C(17179869183llu & ((((((tUInt64)((tUInt32)(DEF_mem_sub_mem_counter_0___d11 >> 20u))) << 20u) | (((tUInt64)((tUInt8)((tUInt8)1u & (DEF_mem_sub_mem_counter_0___d11 >> 19u)))) << 19u)) | (((tUInt64)((tUInt32)(16383u & (DEF_mem_sub_mem_counter_0___d11 >> 5u)))) << 5u)) | (tUInt64)((tUInt8)((tUInt8)31u & DEF_mem_sub_mem_counter_0___d11))));
  DEF_x__h483 = INST_sizeCounter.METH_read();
  DEF_mem_counter_0_EQ_sizeCounter___d21 = DEF_x__h773 == DEF_x__h483;
  DEF_NOT_fileAppend_C_mem_sub_mem_counter_0_1_BITS__ETC___d20 = !DEF_fileAppend_C_mem_sub_mem_counter_0_1_BITS_33_T_ETC___d19;
  DEF_x__h769 = 16383u & (DEF_x__h773 + 1u);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_fileAppend_C_mem_sub_mem_counter_0_1_BITS__ETC___d20)
      dollar_display(sim_hdl, this, "s", &__str_literal_2);
    if (DEF_mem_counter_0_EQ_sizeCounter___d21)
      dollar_display(sim_hdl, this, "s", &__str_literal_3);
  }
  if (DEF_mem_counter_0_EQ_sizeCounter___d21)
    INST_dumpState.METH_write((tUInt8)0u);
  if (DEF_mem_counter_0_EQ_sizeCounter___d21)
    INST_mem_state.METH_write((tUInt8)1u);
  INST_mem_counter.METH_write(DEF_x__h769);
}


/* Methods */

tUInt64 MOD_mkMagicMemory::METH_put(tUInt64 ARG_put_memReq)
{
  tUInt32 DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BIT_19_3__ETC___d36;
  tUInt64 DEF_put_memReq_BITS_18_TO_5_4_CONCAT_put_memReq_BI_ETC___d30;
  tUInt8 DEF_information_info__h859;
  tUInt8 DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BITS_4_TO_0___d37;
  tUInt32 DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BITS_33_T_ETC___d32;
  tUInt32 DEF_i__h943;
  tUInt64 DEF_mem_sub_put_memReq_BITS_47_TO_34_3___d31;
  tUInt64 PORT_put;
  DEF_i__h943 = (tUInt32)(16383u & (ARG_put_memReq >> 34u));
  DEF_mem_sub_put_memReq_BITS_47_TO_34_3___d31 = INST_mem.METH_sub(DEF_i__h943);
  DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BITS_33_T_ETC___d32 = (tUInt32)(DEF_mem_sub_put_memReq_BITS_47_TO_34_3___d31 >> 20u);
  DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BITS_4_TO_0___d37 = (tUInt8)((tUInt8)31u & DEF_mem_sub_put_memReq_BITS_47_TO_34_3___d31);
  DEF_information_info__h859 = (tUInt8)((tUInt8)31u & ARG_put_memReq);
  DEF_put_memReq_BITS_18_TO_5_4_CONCAT_put_memReq_BI_ETC___d30 = 17179869183llu & ((((((tUInt64)((tUInt32)(16383u & (ARG_put_memReq >> 5u)))) << 20u) | (((tUInt64)((tUInt8)((tUInt8)1u & (ARG_put_memReq >> 33u)))) << 19u)) | (((tUInt64)((tUInt32)(16383u & (ARG_put_memReq >> 19u)))) << 5u)) | (tUInt64)(DEF_information_info__h859));
  DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BIT_19_3__ETC___d36 = 32767u & ((((tUInt32)((tUInt8)((tUInt8)1u & (DEF_mem_sub_put_memReq_BITS_47_TO_34_3___d31 >> 19u)))) << 14u) | (tUInt32)(16383u & (DEF_mem_sub_put_memReq_BITS_47_TO_34_3___d31 >> 5u)));
  PORT_put = 17179869183llu & (((((tUInt64)(DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BITS_33_T_ETC___d32)) << 20u) | (((tUInt64)(DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BIT_19_3__ETC___d36)) << 5u)) | (tUInt64)(DEF_mem_sub_put_memReq_BITS_47_TO_34_3_1_BITS_4_TO_0___d37));
  INST_mem.METH_upd(DEF_i__h943, DEF_put_memReq_BITS_18_TO_5_4_CONCAT_put_memReq_BI_ETC___d30);
  return PORT_put;
}

tUInt8 MOD_mkMagicMemory::METH_RDY_put()
{
  tUInt8 DEF_CAN_FIRE_put;
  tUInt8 PORT_RDY_put;
  DEF_mem_state__h348 = INST_mem_state.METH_read();
  DEF_mem_state_EQ_1___d38 = DEF_mem_state__h348 == (tUInt8)1u;
  DEF_CAN_FIRE_put = DEF_mem_state_EQ_1___d38;
  PORT_RDY_put = DEF_CAN_FIRE_put;
  return PORT_RDY_put;
}

tUInt64 MOD_mkMagicMemory::METH_get0(tUInt32 ARG_get0_addr)
{
  tUInt32 DEF_mem_sub_get0_addr_9_BIT_19_1_CONCAT_IF_mem_sub_ETC___d44;
  tUInt8 DEF_mem_sub_get0_addr_9_BITS_4_TO_0___d45;
  tUInt32 DEF_mem_sub_get0_addr_9_BITS_33_TO_20___d40;
  tUInt64 DEF_mem_sub_get0_addr___d39;
  tUInt64 PORT_get0;
  DEF_mem_sub_get0_addr___d39 = INST_mem.METH_sub(ARG_get0_addr);
  DEF_mem_sub_get0_addr_9_BITS_33_TO_20___d40 = (tUInt32)(DEF_mem_sub_get0_addr___d39 >> 20u);
  DEF_mem_sub_get0_addr_9_BITS_4_TO_0___d45 = (tUInt8)((tUInt8)31u & DEF_mem_sub_get0_addr___d39);
  DEF_mem_sub_get0_addr_9_BIT_19_1_CONCAT_IF_mem_sub_ETC___d44 = 32767u & ((((tUInt32)((tUInt8)((tUInt8)1u & (DEF_mem_sub_get0_addr___d39 >> 19u)))) << 14u) | (tUInt32)(16383u & (DEF_mem_sub_get0_addr___d39 >> 5u)));
  PORT_get0 = 17179869183llu & (((((tUInt64)(DEF_mem_sub_get0_addr_9_BITS_33_TO_20___d40)) << 20u) | (((tUInt64)(DEF_mem_sub_get0_addr_9_BIT_19_1_CONCAT_IF_mem_sub_ETC___d44)) << 5u)) | (tUInt64)(DEF_mem_sub_get0_addr_9_BITS_4_TO_0___d45));
  return PORT_get0;
}

tUInt8 MOD_mkMagicMemory::METH_RDY_get0()
{
  tUInt8 DEF_CAN_FIRE_get0;
  tUInt8 PORT_RDY_get0;
  DEF_mem_state__h348 = INST_mem_state.METH_read();
  DEF_mem_state_EQ_1___d38 = DEF_mem_state__h348 == (tUInt8)1u;
  DEF_CAN_FIRE_get0 = DEF_mem_state_EQ_1___d38;
  PORT_RDY_get0 = DEF_CAN_FIRE_get0;
  return PORT_RDY_get0;
}

tUInt64 MOD_mkMagicMemory::METH_get1(tUInt32 ARG_get1_addr)
{
  tUInt32 DEF_mem_sub_get1_addr_6_BIT_19_8_CONCAT_IF_mem_sub_ETC___d51;
  tUInt8 DEF_mem_sub_get1_addr_6_BITS_4_TO_0___d52;
  tUInt32 DEF_mem_sub_get1_addr_6_BITS_33_TO_20___d47;
  tUInt64 DEF_mem_sub_get1_addr___d46;
  tUInt64 PORT_get1;
  DEF_mem_sub_get1_addr___d46 = INST_mem.METH_sub(ARG_get1_addr);
  DEF_mem_sub_get1_addr_6_BITS_33_TO_20___d47 = (tUInt32)(DEF_mem_sub_get1_addr___d46 >> 20u);
  DEF_mem_sub_get1_addr_6_BITS_4_TO_0___d52 = (tUInt8)((tUInt8)31u & DEF_mem_sub_get1_addr___d46);
  DEF_mem_sub_get1_addr_6_BIT_19_8_CONCAT_IF_mem_sub_ETC___d51 = 32767u & ((((tUInt32)((tUInt8)((tUInt8)1u & (DEF_mem_sub_get1_addr___d46 >> 19u)))) << 14u) | (tUInt32)(16383u & (DEF_mem_sub_get1_addr___d46 >> 5u)));
  PORT_get1 = 17179869183llu & (((((tUInt64)(DEF_mem_sub_get1_addr_6_BITS_33_TO_20___d47)) << 20u) | (((tUInt64)(DEF_mem_sub_get1_addr_6_BIT_19_8_CONCAT_IF_mem_sub_ETC___d51)) << 5u)) | (tUInt64)(DEF_mem_sub_get1_addr_6_BITS_4_TO_0___d52));
  return PORT_get1;
}

tUInt8 MOD_mkMagicMemory::METH_RDY_get1()
{
  tUInt8 DEF_CAN_FIRE_get1;
  tUInt8 PORT_RDY_get1;
  DEF_mem_state__h348 = INST_mem_state.METH_read();
  DEF_mem_state_EQ_1___d38 = DEF_mem_state__h348 == (tUInt8)1u;
  DEF_CAN_FIRE_get1 = DEF_mem_state_EQ_1___d38;
  PORT_RDY_get1 = DEF_CAN_FIRE_get1;
  return PORT_RDY_get1;
}

tUInt64 MOD_mkMagicMemory::METH_get2(tUInt32 ARG_get2_addr)
{
  tUInt32 DEF_mem_sub_get2_addr_3_BIT_19_5_CONCAT_IF_mem_sub_ETC___d58;
  tUInt8 DEF_mem_sub_get2_addr_3_BITS_4_TO_0___d59;
  tUInt32 DEF_mem_sub_get2_addr_3_BITS_33_TO_20___d54;
  tUInt64 DEF_mem_sub_get2_addr___d53;
  tUInt64 PORT_get2;
  DEF_mem_sub_get2_addr___d53 = INST_mem.METH_sub(ARG_get2_addr);
  DEF_mem_sub_get2_addr_3_BITS_33_TO_20___d54 = (tUInt32)(DEF_mem_sub_get2_addr___d53 >> 20u);
  DEF_mem_sub_get2_addr_3_BITS_4_TO_0___d59 = (tUInt8)((tUInt8)31u & DEF_mem_sub_get2_addr___d53);
  DEF_mem_sub_get2_addr_3_BIT_19_5_CONCAT_IF_mem_sub_ETC___d58 = 32767u & ((((tUInt32)((tUInt8)((tUInt8)1u & (DEF_mem_sub_get2_addr___d53 >> 19u)))) << 14u) | (tUInt32)(16383u & (DEF_mem_sub_get2_addr___d53 >> 5u)));
  PORT_get2 = 17179869183llu & (((((tUInt64)(DEF_mem_sub_get2_addr_3_BITS_33_TO_20___d54)) << 20u) | (((tUInt64)(DEF_mem_sub_get2_addr_3_BIT_19_5_CONCAT_IF_mem_sub_ETC___d58)) << 5u)) | (tUInt64)(DEF_mem_sub_get2_addr_3_BITS_4_TO_0___d59));
  return PORT_get2;
}

tUInt8 MOD_mkMagicMemory::METH_RDY_get2()
{
  tUInt8 DEF_CAN_FIRE_get2;
  tUInt8 PORT_RDY_get2;
  DEF_mem_state__h348 = INST_mem_state.METH_read();
  DEF_mem_state_EQ_1___d38 = DEF_mem_state__h348 == (tUInt8)1u;
  DEF_CAN_FIRE_get2 = DEF_mem_state_EQ_1___d38;
  PORT_RDY_get2 = DEF_CAN_FIRE_get2;
  return PORT_RDY_get2;
}

tUInt64 MOD_mkMagicMemory::METH_get3(tUInt32 ARG_get3_addr)
{
  tUInt32 DEF_mem_sub_get3_addr_0_BIT_19_2_CONCAT_IF_mem_sub_ETC___d65;
  tUInt8 DEF_mem_sub_get3_addr_0_BITS_4_TO_0___d66;
  tUInt32 DEF_mem_sub_get3_addr_0_BITS_33_TO_20___d61;
  tUInt64 DEF_mem_sub_get3_addr___d60;
  tUInt64 PORT_get3;
  DEF_mem_sub_get3_addr___d60 = INST_mem.METH_sub(ARG_get3_addr);
  DEF_mem_sub_get3_addr_0_BITS_33_TO_20___d61 = (tUInt32)(DEF_mem_sub_get3_addr___d60 >> 20u);
  DEF_mem_sub_get3_addr_0_BITS_4_TO_0___d66 = (tUInt8)((tUInt8)31u & DEF_mem_sub_get3_addr___d60);
  DEF_mem_sub_get3_addr_0_BIT_19_2_CONCAT_IF_mem_sub_ETC___d65 = 32767u & ((((tUInt32)((tUInt8)((tUInt8)1u & (DEF_mem_sub_get3_addr___d60 >> 19u)))) << 14u) | (tUInt32)(16383u & (DEF_mem_sub_get3_addr___d60 >> 5u)));
  PORT_get3 = 17179869183llu & (((((tUInt64)(DEF_mem_sub_get3_addr_0_BITS_33_TO_20___d61)) << 20u) | (((tUInt64)(DEF_mem_sub_get3_addr_0_BIT_19_2_CONCAT_IF_mem_sub_ETC___d65)) << 5u)) | (tUInt64)(DEF_mem_sub_get3_addr_0_BITS_4_TO_0___d66));
  return PORT_get3;
}

tUInt8 MOD_mkMagicMemory::METH_RDY_get3()
{
  tUInt8 DEF_CAN_FIRE_get3;
  tUInt8 PORT_RDY_get3;
  DEF_mem_state__h348 = INST_mem_state.METH_read();
  DEF_mem_state_EQ_1___d38 = DEF_mem_state__h348 == (tUInt8)1u;
  DEF_CAN_FIRE_get3 = DEF_mem_state_EQ_1___d38;
  PORT_RDY_get3 = DEF_CAN_FIRE_get3;
  return PORT_RDY_get3;
}

void MOD_mkMagicMemory::METH_nodeDump()
{
  tUInt8 DEF_fileCreate_C____d67;
  DEF_fileCreate_C____d67 = fileCreate_C();
  if (DEF_fileCreate_C____d67)
    INST_mem_state.METH_write((tUInt8)0u);
}

tUInt8 MOD_mkMagicMemory::METH_RDY_nodeDump()
{
  tUInt8 DEF_CAN_FIRE_nodeDump;
  tUInt8 PORT_RDY_nodeDump;
  DEF_mem_state__h348 = INST_mem_state.METH_read();
  DEF_mem_state_EQ_1___d38 = DEF_mem_state__h348 == (tUInt8)1u;
  DEF_CAN_FIRE_nodeDump = DEF_mem_state_EQ_1___d38;
  PORT_RDY_nodeDump = DEF_CAN_FIRE_nodeDump;
  return PORT_RDY_nodeDump;
}

tUInt8 MOD_mkMagicMemory::METH_dumpCompletion()
{
  tUInt8 DEF_dumpState__h1466;
  tUInt8 PORT_dumpCompletion;
  DEF_dumpState__h1466 = INST_dumpState.METH_read();
  PORT_dumpCompletion = !DEF_dumpState__h1466;
  return PORT_dumpCompletion;
}

tUInt8 MOD_mkMagicMemory::METH_RDY_dumpCompletion()
{
  tUInt8 DEF_CAN_FIRE_dumpCompletion;
  tUInt8 PORT_RDY_dumpCompletion;
  DEF_CAN_FIRE_dumpCompletion = (tUInt8)1u;
  PORT_RDY_dumpCompletion = DEF_CAN_FIRE_dumpCompletion;
  return PORT_RDY_dumpCompletion;
}


/* Reset routines */

void MOD_mkMagicMemory::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_sizeCounter.reset_RST(ARG_rst_in);
  INST_mem_state.reset_RST(ARG_rst_in);
  INST_mem_counter.reset_RST(ARG_rst_in);
  INST_dumpState.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkMagicMemory::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkMagicMemory::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_dumpState.dump_state(indent + 2u);
  INST_mem.dump_state(indent + 2u);
  INST_mem_counter.dump_state(indent + 2u);
  INST_mem_state.dump_state(indent + 2u);
  INST_sizeCounter.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkMagicMemory::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 9u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_state_EQ_1___d38", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_state__h348", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h483", 14u);
  num = INST_dumpState.dump_VCD_defs(num);
  num = INST_mem.dump_VCD_defs(num);
  num = INST_mem_counter.dump_VCD_defs(num);
  num = INST_mem_state.dump_VCD_defs(num);
  num = INST_sizeCounter.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkMagicMemory::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMagicMemory &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkMagicMemory::vcd_defs(tVCDDumpType dt, MOD_mkMagicMemory &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 14u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_mem_state_EQ_1___d38) != DEF_mem_state_EQ_1___d38)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_state_EQ_1___d38, 1u);
	backing.DEF_mem_state_EQ_1___d38 = DEF_mem_state_EQ_1___d38;
      }
      ++num;
      if ((backing.DEF_mem_state__h348) != DEF_mem_state__h348)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_state__h348, 3u);
	backing.DEF_mem_state__h348 = DEF_mem_state__h348;
      }
      ++num;
      if ((backing.DEF_x__h483) != DEF_x__h483)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h483, 14u);
	backing.DEF_x__h483 = DEF_x__h483;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_mem_state_EQ_1___d38, 1u);
      backing.DEF_mem_state_EQ_1___d38 = DEF_mem_state_EQ_1___d38;
      vcd_write_val(sim_hdl, num++, DEF_mem_state__h348, 3u);
      backing.DEF_mem_state__h348 = DEF_mem_state__h348;
      vcd_write_val(sim_hdl, num++, DEF_x__h483, 14u);
      backing.DEF_x__h483 = DEF_x__h483;
    }
}

void MOD_mkMagicMemory::vcd_prims(tVCDDumpType dt, MOD_mkMagicMemory &backing)
{
  INST_dumpState.dump_VCD(dt, backing.INST_dumpState);
  INST_mem.dump_VCD(dt, backing.INST_mem);
  INST_mem_counter.dump_VCD(dt, backing.INST_mem_counter);
  INST_mem_state.dump_VCD(dt, backing.INST_mem_state);
  INST_sizeCounter.dump_VCD(dt, backing.INST_sizeCounter);
}
